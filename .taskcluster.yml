version: 1
policy:
  pullRequests: public
tasks:
  $let:
    # Github events have this stuff in different places...
    repo_url: {$if: 'tasks_for == "github-push"',
               then: '${event.repository.clone_url}',
               # Assume Pull Request
               else: '${event.pull_request.head.repo.clone_url}'}
    head_sha: {$if: 'tasks_for == "github-push"',
               then: '${event.after}',
               # Assume Pull Request
               else: '${event.pull_request.head.sha}'}
    owner_email: {$if: 'tasks_for == "github-push"',
                  then: '${event.pusher.email}',
                  # Assume Pull Request
                  else: '${event.pull_request.user.login}@users.noreply.github.com'}
    pull_request_number: {
      $if: 'tasks_for == "github-pull-request"',
      then: '${event.number}',
      else: '',
    }
  in:
    # map tox command -> docker image
    $map: [['py36', 'python:3.6', {NO_TESTS_OVER_WIRE: '1'}, []],
           ['py37', 'python:3.7', {
                NO_TESTS_OVER_WIRE: '1',
                CIRCLECI: '1',
                CI_PULL_REQUEST: '${pull_request_number}'
            }, ['secrets:get:repo:github.com/mozilla-releng/scriptworker:coveralls']],
           ['py38', 'python:3.8', {NO_TESTS_OVER_WIRE: '1'}, []],
           ['py37-cot', 'python:3.7', {NO_CREDENTIALS_TESTS: '1'}, []],
           ['check', 'python:3.7', {}, []]]
    each(py):
      taskId: "${as_slugid(py[0])}"
      provisionerId: "releng-t"
      workerType: "linux"
      scopes: {$eval: 'py[3]'}
      created: {$eval: 'now'}
      deadline: {$fromNow: '1 hour'}
      payload:
        maxRunTime: 1200
        image: {$eval: 'py[1]'}
        env: {$eval: 'py[2]'}
        command:
          - /bin/bash
          - -c
          - >-
            git clone ${repo_url} scriptworker &&
            cd scriptworker &&
            git checkout ${head_sha} &&
            pip install tox &&
            tox -e ${py[0]} &&
            if [ "${py[0]}" == "py37" ]; then
                export COVERALLS_REPO_TOKEN=$(curl 'taskcluster/secrets/v1/secret/repo:github.com/mozilla-releng/scriptworker:coveralls' | python -c 'import json, sys; a = json.load(sys.stdin); print(a["secret"]["repo_token"])') &&
                tox -e coveralls
            fi
      metadata:
        name: Scriptworker Pull Request ${py[0]}
        description: Pull Request ${py[0]}
        owner: ${owner_email}
        source: "${repo_url}"
